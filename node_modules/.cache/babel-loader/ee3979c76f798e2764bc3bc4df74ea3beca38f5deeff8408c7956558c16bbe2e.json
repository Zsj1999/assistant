{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { API_CONFIG } from '../../utils/api';\nimport IconGlm from '../IconBox/IconGlm.vue';\nimport { ImageCogView } from '../../utils/prompt.js';\nexport default {\n  components: {\n    IconGlm\n  },\n  data() {\n    return {\n      inputText: '',\n      selectedStyle: '',\n      imageUrl: '',\n      isLoading: false,\n      styles: ImageCogView,\n      currentStyles: []\n    };\n  },\n  methods: {\n    selectStyle(styleName) {\n      this.selectedStyle = styleName;\n    },\n    shuffleStyles() {\n      // 随机从styles中选择3个不同的风格\n      const shuffled = this.styles.sort(() => Math.random() - 0.5).slice(0, 4);\n      this.currentStyles = shuffled;\n    },\n    async submitData() {\n      if (!this.inputText) return;\n      const {\n        apiUrl,\n        apiKey,\n        modelName\n      } = API_CONFIG['bigmodelCogview'];\n      const stylePrompt = this.styles.find(style => style.name === this.selectedStyle)?.prompt || '';\n      const fullPrompt = `${this.inputText}，${stylePrompt}`;\n      await this.getAIResponse(apiUrl, apiKey, modelName, fullPrompt);\n    },\n    async getAIResponse(apiUrl, apiKey, modelName, prompt) {\n      this.isLoading = true;\n      this.imageUrl = null;\n      try {\n        const requestBody = {\n          model: modelName,\n          prompt\n        };\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiKey}`\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        this.imageUrl = result.data[0]?.url || '';\n      } catch (error) {\n        console.error('Error fetching AI response:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  },\n  mounted() {\n    // 初始化时先加载3个风格\n    this.shuffleStyles();\n  }\n};","map":{"version":3,"names":["API_CONFIG","IconGlm","ImageCogView","components","data","inputText","selectedStyle","imageUrl","isLoading","styles","currentStyles","methods","selectStyle","styleName","shuffleStyles","shuffled","sort","Math","random","slice","submitData","apiUrl","apiKey","modelName","stylePrompt","find","style","name","prompt","fullPrompt","getAIResponse","requestBody","model","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","status","result","json","url","error","console","mounted"],"sources":["src/components/ImgBox/CogView.vue"],"sourcesContent":["<template>\n    <div class=\"container mx-auto pl-4 pr-4\">\n        <div class=\"flex flex-col lg:flex-row lg:gap-8 lg:mt-10\">\n            <!-- 图片展示区域 -->\n            <div class=\"w-full aspect-square mb-4 rounded-md overflow-hidden lg:w-1/2 lg:mb-0\">\n                <img :src=\"imageUrl\" alt=\"Uploaded Image\" class=\"w-full h-full object-cover\" v-if=\"imageUrl\" />\n                <div class=\"w-full h-full bg-gray-100 flex items-center justify-center\">\n                    <IconGlm />\n                </div>\n            </div>\n\n            <div class=\"w-full lg:w-1/2 flex flex-col justify-between\">\n                <div>\n                    <!-- <h2 class=\"head-title font-bold text-left cursor-pointer transition-all\">AI图片生成器</h2> -->\n\n                    <textarea\n                        v-model=\"inputText\"\n                        class=\"text-sm w-full h-[80px] p-2 text-lg border rounded-md focus:ring-2\"\n                        placeholder=\"请输入需要生成的图片，尽可能描述清楚图片内容，才能更加准确地生成图片！\"\n                    ></textarea>\n\n                    <div class=\"my-4\">\n                        <label class=\"block text-lg font-medium mb-2 text-sm\"\n                            >选择风格\n                            <span @click=\"shuffleStyles\" class=\"text-blue-500 cursor-pointer float-right\">换一批</span>\n                        </label>\n                        <div class=\"grid grid-cols-4 gap-1\">\n                            <button\n                                v-for=\"style in currentStyles\"\n                                :key=\"style.name\"\n                                style=\"font-size: 14px\"\n                                :class=\"['p-2 rounded-md border focus:outline-none', selectedStyle === style.name ? 'bg-blue-500 text-white' : 'bg-gray-200']\"\n                                @click=\"selectStyle(style.name)\"\n                            >\n                                {{ style.name }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        @click=\"submitData\"\n                        class=\"text-sm w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-all\"\n                        :disabled=\"!inputText || isLoading\"\n                    >\n                        {{ isLoading ? '创作中...' : '开始创作' }}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { API_CONFIG } from '../../utils/api'\nimport IconGlm from '../IconBox/IconGlm.vue'\n\nimport { ImageCogView } from '../../utils/prompt.js'\nexport default {\n    components: {\n        IconGlm\n    },\n    data() {\n        return {\n            inputText: '',\n            selectedStyle: '',\n            imageUrl: '',\n            isLoading: false,\n            styles: ImageCogView,\n            currentStyles: []\n        }\n    },\n    methods: {\n        selectStyle(styleName) {\n            this.selectedStyle = styleName\n        },\n        shuffleStyles() {\n            // 随机从styles中选择3个不同的风格\n            const shuffled = this.styles.sort(() => Math.random() - 0.5).slice(0, 4)\n            this.currentStyles = shuffled\n        },\n        async submitData() {\n            if (!this.inputText) return\n\n            const { apiUrl, apiKey, modelName } = API_CONFIG['bigmodelCogview']\n            const stylePrompt = this.styles.find(style => style.name === this.selectedStyle)?.prompt || ''\n            const fullPrompt = `${this.inputText}，${stylePrompt}`\n\n            await this.getAIResponse(apiUrl, apiKey, modelName, fullPrompt)\n        },\n        async getAIResponse(apiUrl, apiKey, modelName, prompt) {\n            this.isLoading = true\n            this.imageUrl = null\n            try {\n                const requestBody = {\n                    model: modelName,\n                    prompt\n                }\n                const response = await fetch(apiUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${apiKey}`\n                    },\n                    body: JSON.stringify(requestBody)\n                })\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`)\n                }\n\n                const result = await response.json()\n                this.imageUrl = result.data[0]?.url || ''\n            } catch (error) {\n                console.error('Error fetching AI response:', error)\n            } finally {\n                this.isLoading = false\n            }\n        }\n    },\n    mounted() {\n        // 初始化时先加载3个风格\n        this.shuffleStyles()\n    }\n}\n</script>\n\n<style scoped>\n.container {\n    padding-bottom: 50px;\n}\ntextarea {\n    outline: none;\n}\n.head-title {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n</style>\n"],"mappings":";;AAsDA,SAAAA,UAAA;AACA,OAAAC,OAAA;AAEA,SAAAC,YAAA;AACA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,QAAA;MACAC,SAAA;MACAC,MAAA,EAAAP,YAAA;MACAQ,aAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,SAAA;MACA,KAAAP,aAAA,GAAAO,SAAA;IACA;IACAC,cAAA;MACA;MACA,MAAAC,QAAA,QAAAN,MAAA,CAAAO,IAAA,OAAAC,IAAA,CAAAC,MAAA,UAAAC,KAAA;MACA,KAAAT,aAAA,GAAAK,QAAA;IACA;IACA,MAAAK,WAAA;MACA,UAAAf,SAAA;MAEA;QAAAgB,MAAA;QAAAC,MAAA;QAAAC;MAAA,IAAAvB,UAAA;MACA,MAAAwB,WAAA,QAAAf,MAAA,CAAAgB,IAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA,UAAArB,aAAA,GAAAsB,MAAA;MACA,MAAAC,UAAA,WAAAxB,SAAA,IAAAmB,WAAA;MAEA,WAAAM,aAAA,CAAAT,MAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAM,UAAA;IACA;IACA,MAAAC,cAAAT,MAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAK,MAAA;MACA,KAAApB,SAAA;MACA,KAAAD,QAAA;MACA;QACA,MAAAwB,WAAA;UACAC,KAAA,EAAAT,SAAA;UACAK;QACA;QACA,MAAAK,QAAA,SAAAC,KAAA,CAAAb,MAAA;UACAc,MAAA;UACAC,OAAA;YACA;YACAC,aAAA,YAAAf,MAAA;UACA;UACAgB,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAT,WAAA;QACA;QAEA,KAAAE,QAAA,CAAAQ,EAAA;UACA,UAAAC,KAAA,wBAAAT,QAAA,CAAAU,MAAA;QACA;QAEA,MAAAC,MAAA,SAAAX,QAAA,CAAAY,IAAA;QACA,KAAAtC,QAAA,GAAAqC,MAAA,CAAAxC,IAAA,KAAA0C,GAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;MACA;QACA,KAAAvC,SAAA;MACA;IACA;EACA;EACAyC,QAAA;IACA;IACA,KAAAnC,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}