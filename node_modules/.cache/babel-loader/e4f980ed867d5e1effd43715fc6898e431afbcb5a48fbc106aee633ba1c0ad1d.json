{"ast":null,"code":"// 不同模型的 API 配置\nexport const API_CONFIG = {\n  // shuinifengxin: {\n  //     name: '水泥封心',\n  //     apiUrl: 'https://api.qnaigc.com/v1/chat/completions',\n  //     apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n  //     modelName: 'deepseek-v3',\n  //     temperature: 0.6\n  // },\n  deepseek: {\n    // 派欧算力云\n    // name: 'DeepSeek',\n    // apiUrl: 'https://api.ppinfra.com/v3/openai/chat/completions',\n    // apiKey: '',\n    // modelName: 'deepseek/deepseek-v3/community',\n    // temperature: 0.6\n    // 七牛云\n    name: 'DeepSeek',\n    apiUrl: 'https://api.qnaigc.com/v1/chat/completions',\n    apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n    modelName: 'deepseek-v3',\n    temperature: 0.6\n    // 官方\n    // name: 'DeepSeek',\n    // apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n    // apiKey: process.env.VUE_APP_DEEPSEEK_API_KEY,\n    // modelName: 'deepseek-chat',\n    // temperature: 0.8\n  },\n  // 深度思考\n  deepThinking: {\n    // 派欧算力云\n    // name: 'DeepSeek-R1',\n    // apiUrl: 'https://api.ppinfra.com/v3/openai/chat/completions',\n    // apiKey: '',\n    // modelName: 'deepseek/deepseek-r1',\n    // temperature: 0.6\n    // 七牛云\n    name: 'DeepSeek-R1',\n    apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n    apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n    modelName: 'deepseek-r1',\n    temperature: 0.6\n    // 官方\n    // apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n    // apiKey: process.env.VUE_APP_DEEPSEEK_API_KEY,\n    // modelName: 'deepseek-reasoner'\n  },\n  gemini: {\n    name: 'Gemini',\n    apiUrl: 'https://liuziting-gemini-play-98-58acmhtr50hp.deno.dev/v1/chat/completions',\n    // apiUrl: 'https://my-openai-gemini-demo.vercel.app/v1/chat/completions',\n    apiKey: process.env.VUE_APP_GEMINI_API_KEY,\n    modelName: 'gemini-1.5-pro-latest',\n    // modelName: 'gemini-2.0-flash-lite-preview-02-05',\n    // modelName: 'gemini-2.0-flash-thinking-exp',\n    temperature: 0.8\n  },\n  bigmodel: {\n    name: '智谱清言',\n    apiUrl: 'https://open.bigmodel.cn/api/paas/v4/chat/completions',\n    apiKey: process.env.VUE_APP_GLM_API_KEY,\n    modelName: 'glm-4v-flash',\n    temperature: 0.8\n  },\n  bigmodelCogview: {\n    name: '智谱清言',\n    apiUrl: 'https://open.bigmodel.cn/api/paas/v4/images/generations',\n    apiKey: process.env.VUE_APP_GLM_API_KEY,\n    modelName: 'cogview-3-flash',\n    temperature: 0.8\n  },\n  bigmodelCogVideo: {\n    name: '智谱清言',\n    apiUrl: 'https://open.bigmodel.cn/api/paas/v4/videos/generations',\n    apiKey: process.env.VUE_APP_GLM_API_KEY,\n    modelName: 'cogvideox-flash',\n    temperature: 0.8\n  },\n  kimi: {\n    name: '月之暗面',\n    apiUrl: 'https://api.moonshot.cn/v1/chat/completions',\n    apiKey: process.env.VUE_APP_KIMI_API_KEY,\n    modelName: 'moonshot-v1-8k',\n    temperature: 0.8\n  },\n  kimiFile: {\n    apiUrl: 'https://api.moonshot.cn/v1/chat/completions',\n    apiKey: process.env.VUE_APP_KIMI_API_KEY,\n    modelName: 'moonshot-v1-8k-vision-preview',\n    temperature: 0.7\n  },\n  baichuan: {\n    name: '百川智能',\n    apiUrl: 'https://api.baichuan-ai.com/v1/chat/completions',\n    apiKey: process.env.VUE_APP_BAICHUAN_API_KEY,\n    modelName: 'Baichuan4-Air',\n    temperature: 0.8\n  },\n  stepfunChat: {\n    name: '阶跃星辰',\n    apiUrl: 'https://api.stepfun.com/v1/chat/completions',\n    apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n    modelName: 'step-1-flash',\n    temperature: 0.8\n  },\n  stepfun: {\n    name: '阶跃星辰',\n    apiUrl: 'https://api.stepfun.com/v1/chat/completions',\n    apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n    modelName: 'step-1o-turbo-vision',\n    temperature: 0.8\n  },\n  stepfunTTS: {\n    name: '阶跃星辰',\n    apiUrl: 'https://api.stepfun.com/v1/audio/speech',\n    apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n    modelName: 'step-tts-mini'\n  },\n  gpt35: {\n    name: 'GPT',\n    apiUrl: 'https://api.chatanywhere.tech/v1/chat/completions',\n    apiKey: process.env.VUE_APP_GPT35_API_KEY,\n    modelName: 'gpt-3.5-turbo',\n    temperature: 0.8\n  }\n};\nexport const fetchAIResponse = async (apiUrl, apiKey, modelName, messages, temperature = 1, stream = false, onDataReceived, controller) => {\n  // 构建请求体\n  const requestBody = {\n    model: modelName,\n    messages,\n    stream // 根据 stream 参数决定是否启用流式响应\n  };\n\n  // 如果不是 deepThinking 模型，添加 temperature 参数\n  if (modelName !== 'deepseek-reasoner') {\n    requestBody.temperature = temperature;\n  }\n\n  // 记录请求开始时间\n  const startTime = performance.now();\n  const response = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${apiKey}`\n    },\n    body: JSON.stringify(requestBody),\n    // 使用动态构建的请求体\n    signal: controller.signal // 关联 AbortController\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  // 如果 stream 为 false，直接返回完整的响应数据\n  if (!stream) {\n    const data = await response.json();\n    const endTime = performance.now();\n    const totalDuration = parseFloat(((endTime - startTime) / 1000).toFixed(1)); // 计算总耗时，保留 1 位小数\n    onDataReceived({\n      type: 'complete',\n      duration: totalDuration\n    }); // 传递总耗时\n    return data;\n  }\n\n  // 处理流式响应\n  const reader = response.body.getReader();\n  const decoder = new TextDecoder('utf-8');\n  let buffer = '';\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (done) {\n      const endTime = performance.now();\n      const totalDuration = parseFloat(((endTime - startTime) / 1000).toFixed(1)); // 计算总耗时，保留 1 位小数\n      onDataReceived({\n        type: 'complete',\n        duration: totalDuration\n      }); // 传递总耗时\n      break;\n    }\n    buffer += decoder.decode(value, {\n      stream: true\n    });\n    const lines = buffer.split('\\n');\n    buffer = lines.pop();\n    for (const line of lines) {\n      if (line.trim() === 'data: [DONE]') {\n        return;\n      }\n      if (line.startsWith('data: ')) {\n        const jsonData = line.slice(6);\n        try {\n          const data = JSON.parse(jsonData);\n          if (data.choices && data.choices[0].delta) {\n            const delta = data.choices[0].delta;\n            const currentDuration = parseFloat(((performance.now() - startTime) / 1000).toFixed(2));\n            if (delta.reasoning_content) {\n              const tokenCount = calculateTokenCount(delta.reasoning_content);\n              onDataReceived({\n                type: 'reasoning',\n                content: delta.reasoning_content,\n                token: tokenCount,\n                duration: currentDuration\n              });\n            }\n            if (delta.content) {\n              const tokenCount = calculateTokenCount(delta.content);\n              onDataReceived({\n                type: 'content',\n                content: delta.content,\n                token: tokenCount,\n                duration: currentDuration\n              });\n            }\n          }\n        } catch (error) {\n          console.error('Error parsing JSON:', error);\n        }\n      }\n    }\n  }\n};\n\n// TTS\nexport const fetchTTS = async (apiUrl, apiKey, modelName, input, voice) => {\n  const requestBody = {\n    model: modelName,\n    voice: voice,\n    input: input\n  };\n  const response = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${apiKey}`\n    },\n    body: JSON.stringify(requestBody)\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  // 获取音频数据\n  const blob = await response.blob();\n  return blob;\n};\n\n// 计算 token 数量的函数\nconst calculateTokenCount = text => {\n  const englishChars = text.match(/[a-zA-Z]/g) || [];\n  const chineseChars = text.match(/[\\u4e00-\\u9fa5]/g) || [];\n  const tokenCount = englishChars.length * 0.3 + chineseChars.length * 0.6;\n  return parseFloat(tokenCount.toFixed(4)); // 保留 4 位小数并转换为数字\n};","map":{"version":3,"names":["API_CONFIG","deepseek","name","apiUrl","apiKey","process","env","VUE_APP_QIUNIUYUN_API_KEY","modelName","temperature","deepThinking","gemini","VUE_APP_GEMINI_API_KEY","bigmodel","VUE_APP_GLM_API_KEY","bigmodelCogview","bigmodelCogVideo","kimi","VUE_APP_KIMI_API_KEY","kimiFile","baichuan","VUE_APP_BAICHUAN_API_KEY","stepfunChat","VUE_APP_STEPFUN_API_KEY","stepfun","stepfunTTS","gpt35","VUE_APP_GPT35_API_KEY","fetchAIResponse","messages","stream","onDataReceived","controller","requestBody","model","startTime","performance","now","response","fetch","method","headers","Authorization","body","JSON","stringify","signal","ok","Error","status","data","json","endTime","totalDuration","parseFloat","toFixed","type","duration","reader","getReader","decoder","TextDecoder","buffer","done","value","read","decode","lines","split","pop","line","trim","startsWith","jsonData","slice","parse","choices","delta","currentDuration","reasoning_content","tokenCount","calculateTokenCount","content","token","error","console","fetchTTS","input","voice","blob","text","englishChars","match","chineseChars","length"],"sources":["/Users/mac/ZSJ/weChat/test/src/utils/api.js"],"sourcesContent":["// 不同模型的 API 配置\nexport const API_CONFIG = {\n    // shuinifengxin: {\n    //     name: '水泥封心',\n    //     apiUrl: 'https://api.qnaigc.com/v1/chat/completions',\n    //     apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n    //     modelName: 'deepseek-v3',\n    //     temperature: 0.6\n    // },\n    deepseek: {\n        // 派欧算力云\n        // name: 'DeepSeek',\n        // apiUrl: 'https://api.ppinfra.com/v3/openai/chat/completions',\n        // apiKey: '',\n        // modelName: 'deepseek/deepseek-v3/community',\n        // temperature: 0.6\n        // 七牛云\n        name: 'DeepSeek',\n        apiUrl: 'https://api.qnaigc.com/v1/chat/completions',\n        apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n        modelName: 'deepseek-v3',\n        temperature: 0.6\n        // 官方\n        // name: 'DeepSeek',\n        // apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n        // apiKey: process.env.VUE_APP_DEEPSEEK_API_KEY,\n        // modelName: 'deepseek-chat',\n        // temperature: 0.8\n    },\n    // 深度思考\n    deepThinking: {\n        // 派欧算力云\n        // name: 'DeepSeek-R1',\n        // apiUrl: 'https://api.ppinfra.com/v3/openai/chat/completions',\n        // apiKey: '',\n        // modelName: 'deepseek/deepseek-r1',\n        // temperature: 0.6\n        // 七牛云\n        name: 'DeepSeek-R1',\n        apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n        apiKey: process.env.VUE_APP_QIUNIUYUN_API_KEY,\n        modelName: 'deepseek-r1',\n        temperature: 0.6\n        // 官方\n        // apiUrl: 'https://api.deepseek.com/v1/chat/completions',\n        // apiKey: process.env.VUE_APP_DEEPSEEK_API_KEY,\n        // modelName: 'deepseek-reasoner'\n    },\n    gemini: {\n        name: 'Gemini',\n        apiUrl: 'https://liuziting-gemini-play-98-58acmhtr50hp.deno.dev/v1/chat/completions',\n        // apiUrl: 'https://my-openai-gemini-demo.vercel.app/v1/chat/completions',\n        apiKey: process.env.VUE_APP_GEMINI_API_KEY,\n        modelName: 'gemini-1.5-pro-latest',\n        // modelName: 'gemini-2.0-flash-lite-preview-02-05',\n        // modelName: 'gemini-2.0-flash-thinking-exp',\n        temperature: 0.8\n    },\n    bigmodel: {\n        name: '智谱清言',\n        apiUrl: 'https://open.bigmodel.cn/api/paas/v4/chat/completions',\n        apiKey: process.env.VUE_APP_GLM_API_KEY,\n        modelName: 'glm-4v-flash',\n        temperature: 0.8\n    },\n    bigmodelCogview: {\n        name: '智谱清言',\n        apiUrl: 'https://open.bigmodel.cn/api/paas/v4/images/generations',\n        apiKey: process.env.VUE_APP_GLM_API_KEY,\n        modelName: 'cogview-3-flash',\n        temperature: 0.8\n    },\n    bigmodelCogVideo: {\n        name: '智谱清言',\n        apiUrl: 'https://open.bigmodel.cn/api/paas/v4/videos/generations',\n        apiKey: process.env.VUE_APP_GLM_API_KEY,\n        modelName: 'cogvideox-flash',\n        temperature: 0.8\n    },\n    kimi: {\n        name: '月之暗面',\n        apiUrl: 'https://api.moonshot.cn/v1/chat/completions',\n        apiKey: process.env.VUE_APP_KIMI_API_KEY,\n        modelName: 'moonshot-v1-8k',\n        temperature: 0.8\n    },\n    kimiFile: {\n        apiUrl: 'https://api.moonshot.cn/v1/chat/completions',\n        apiKey: process.env.VUE_APP_KIMI_API_KEY,\n        modelName: 'moonshot-v1-8k-vision-preview',\n        temperature: 0.7\n    },\n    baichuan: {\n        name: '百川智能',\n        apiUrl: 'https://api.baichuan-ai.com/v1/chat/completions',\n        apiKey: process.env.VUE_APP_BAICHUAN_API_KEY,\n        modelName: 'Baichuan4-Air',\n        temperature: 0.8\n    },\n    stepfunChat: {\n        name: '阶跃星辰',\n        apiUrl: 'https://api.stepfun.com/v1/chat/completions',\n        apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n        modelName: 'step-1-flash',\n        temperature: 0.8\n    },\n    stepfun: {\n        name: '阶跃星辰',\n        apiUrl: 'https://api.stepfun.com/v1/chat/completions',\n        apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n        modelName: 'step-1o-turbo-vision',\n        temperature: 0.8\n    },\n    stepfunTTS: {\n        name: '阶跃星辰',\n        apiUrl: 'https://api.stepfun.com/v1/audio/speech',\n        apiKey: process.env.VUE_APP_STEPFUN_API_KEY,\n        modelName: 'step-tts-mini'\n    },\n    gpt35: {\n        name: 'GPT',\n        apiUrl: 'https://api.chatanywhere.tech/v1/chat/completions',\n        apiKey: process.env.VUE_APP_GPT35_API_KEY,\n        modelName: 'gpt-3.5-turbo',\n        temperature: 0.8\n    }\n}\n\nexport const fetchAIResponse = async (apiUrl, apiKey, modelName, messages, temperature = 1, stream = false, onDataReceived, controller) => {\n    // 构建请求体\n    const requestBody = {\n        model: modelName,\n        messages,\n        stream // 根据 stream 参数决定是否启用流式响应\n    }\n\n    // 如果不是 deepThinking 模型，添加 temperature 参数\n    if (modelName !== 'deepseek-reasoner') {\n        requestBody.temperature = temperature\n    }\n\n    // 记录请求开始时间\n    const startTime = performance.now()\n\n    const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify(requestBody), // 使用动态构建的请求体\n        signal: controller.signal // 关联 AbortController\n    })\n\n    if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n    }\n\n    // 如果 stream 为 false，直接返回完整的响应数据\n    if (!stream) {\n        const data = await response.json()\n        const endTime = performance.now()\n        const totalDuration = parseFloat(((endTime - startTime) / 1000).toFixed(1)) // 计算总耗时，保留 1 位小数\n        onDataReceived({ type: 'complete', duration: totalDuration }) // 传递总耗时\n        return data\n    }\n\n    // 处理流式响应\n    const reader = response.body.getReader()\n    const decoder = new TextDecoder('utf-8')\n    let buffer = ''\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n            const endTime = performance.now()\n            const totalDuration = parseFloat(((endTime - startTime) / 1000).toFixed(1)) // 计算总耗时，保留 1 位小数\n            onDataReceived({ type: 'complete', duration: totalDuration }) // 传递总耗时\n            break\n        }\n\n        buffer += decoder.decode(value, { stream: true })\n\n        const lines = buffer.split('\\n')\n        buffer = lines.pop()\n\n        for (const line of lines) {\n            if (line.trim() === 'data: [DONE]') {\n                return\n            }\n\n            if (line.startsWith('data: ')) {\n                const jsonData = line.slice(6)\n                try {\n                    const data = JSON.parse(jsonData)\n                    if (data.choices && data.choices[0].delta) {\n                        const delta = data.choices[0].delta\n                        const currentDuration = parseFloat(((performance.now() - startTime) / 1000).toFixed(2))\n\n                        if (delta.reasoning_content) {\n                            const tokenCount = calculateTokenCount(delta.reasoning_content)\n                            onDataReceived({\n                                type: 'reasoning',\n                                content: delta.reasoning_content,\n                                token: tokenCount,\n                                duration: currentDuration\n                            })\n                        }\n                        if (delta.content) {\n                            const tokenCount = calculateTokenCount(delta.content)\n                            onDataReceived({\n                                type: 'content',\n                                content: delta.content,\n                                token: tokenCount,\n                                duration: currentDuration\n                            })\n                        }\n                    }\n                } catch (error) {\n                    console.error('Error parsing JSON:', error)\n                }\n            }\n        }\n    }\n}\n\n// TTS\nexport const fetchTTS = async (apiUrl, apiKey, modelName, input, voice) => {\n    const requestBody = {\n        model: modelName,\n        voice: voice,\n        input: input\n    }\n\n    const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify(requestBody)\n    })\n\n    if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n    }\n\n    // 获取音频数据\n    const blob = await response.blob()\n    return blob\n}\n\n// 计算 token 数量的函数\nconst calculateTokenCount = text => {\n    const englishChars = text.match(/[a-zA-Z]/g) || []\n    const chineseChars = text.match(/[\\u4e00-\\u9fa5]/g) || []\n    const tokenCount = englishChars.length * 0.3 + chineseChars.length * 0.6\n    return parseFloat(tokenCount.toFixed(4)) // 保留 4 位小数并转换为数字\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}