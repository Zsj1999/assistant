{"ast":null,"code":"import hljs from 'highlight.js'; // 引入 highlight.js\nimport 'highlight.js/styles/atom-one-dark.css'; // 引入黑色主题样式\nimport Clipboard from 'clipboard'; // 引入 clipboard 库\nexport default {\n  props: {\n    code: {\n      type: String,\n      required: true\n    },\n    language: {\n      type: String,\n      default: 'plaintext' // 默认语言为纯文本\n    },\n    showCopyButton: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      isCopied: false // 控制是否显示成功图标\n    };\n  },\n  computed: {\n    // 根据语言动态设置高亮类\n    languageClass() {\n      return `language-${this.language}`;\n    },\n    // 保留换行符的代码\n    formattedCode() {\n      return this.code; // 直接返回代码内容，确保换行符被保留\n    }\n  },\n  mounted() {\n    // 初始化代码高亮\n    this.highlightCode();\n  },\n  methods: {\n    // 高亮代码\n    highlightCode() {\n      const codeElement = this.$refs.code;\n      if (codeElement) {\n        hljs.highlightBlock(codeElement);\n      }\n    },\n    // 复制代码\n    copyCode() {\n      const clipboard = new Clipboard('.copy-button', {\n        text: () => this.code\n      });\n      clipboard.on('success', () => {\n        this.isCopied = true; // 显示成功图标\n        setTimeout(() => {\n          this.isCopied = false; // 3 秒后恢复为复制图标\n        }, 3000);\n        clipboard.destroy(); // 销毁 clipboard 实例\n      });\n      clipboard.on('error', () => {\n        console.log('复制失败，请手动复制。');\n        clipboard.destroy(); // 销毁 clipboard 实例\n      });\n    }\n  }\n};","map":{"version":3,"names":["hljs","Clipboard","props","code","type","String","required","language","default","showCopyButton","Boolean","data","isCopied","computed","languageClass","formattedCode","mounted","highlightCode","methods","codeElement","$refs","highlightBlock","copyCode","clipboard","text","on","setTimeout","destroy","console","log"],"sources":["src/components/CodeBlock.vue"],"sourcesContent":["vue\n<template>\n    <div class=\"code-block\">\n        <!-- 代码块 -->\n        <pre><code ref=\"code\" :class=\"languageClass\">{{ formattedCode }}</code></pre>\n        <!-- 复制按钮 -->\n        <svg\n            v-if=\"!isCopied\"\n            @click=\"copyCode\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"h-5 w-5 text-gray-500 absolute top-2 right-2 cursor-pointer copy-button\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n            <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n            />\n        </svg>\n        <!-- 成功图标 -->\n        <svg\n            v-else\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"h-5 w-5 text-green-500 absolute top-2 right-2 cursor-pointer copy-button\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n        </svg>\n    </div>\n</template>\n<script>\nimport hljs from 'highlight.js' // 引入 highlight.js\nimport 'highlight.js/styles/atom-one-dark.css' // 引入黑色主题样式\nimport Clipboard from 'clipboard' // 引入 clipboard 库\nexport default {\n    props: {\n        code: {\n            type: String,\n            required: true\n        },\n        language: {\n            type: String,\n            default: 'plaintext' // 默认语言为纯文本\n        },\n        showCopyButton: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            isCopied: false // 控制是否显示成功图标\n        }\n    },\n    computed: {\n        // 根据语言动态设置高亮类\n        languageClass() {\n            return `language-${this.language}`\n        },\n        // 保留换行符的代码\n        formattedCode() {\n            return this.code // 直接返回代码内容，确保换行符被保留\n        }\n    },\n    mounted() {\n        // 初始化代码高亮\n        this.highlightCode()\n    },\n    methods: {\n        // 高亮代码\n        highlightCode() {\n            const codeElement = this.$refs.code\n            if (codeElement) {\n                hljs.highlightBlock(codeElement)\n            }\n        },\n        // 复制代码\n        copyCode() {\n            const clipboard = new Clipboard('.copy-button', {\n                text: () => this.code\n            })\n            clipboard.on('success', () => {\n                this.isCopied = true // 显示成功图标\n                setTimeout(() => {\n                    this.isCopied = false // 3 秒后恢复为复制图标\n                }, 3000)\n                clipboard.destroy() // 销毁 clipboard 实例\n            })\n            clipboard.on('error', () => {\n                console.log('复制失败，请手动复制。')\n                clipboard.destroy() // 销毁 clipboard 实例\n            })\n        }\n    }\n}\n</script>\n<style scoped>\n.code-block {\n    position: relative;\n    background: #282c34; /* 黑色主题背景色 */\n    border-radius: 6px;\n    padding: 10px;\n    margin: 16px 0;\n}\npre {\n    margin: 0;\n    overflow-x: auto; /* 水平滚动 */\n    white-space: pre-wrap; /* 保留换行符 */\n    word-wrap: break-word; /* 长单词换行 */\n}\ncode {\n    display: block; /* 确保代码块独占一行 */\n    font-family: 'Courier New', Courier, monospace; /* 等宽字体 */\n    font-size: 14px;\n    line-height: 1.5;\n}\npre code.hljs {\n    padding: 0 !important;\n}\n</style>\n"],"mappings":"AAoCA,OAAAA,IAAA;AACA;AACA,OAAAC,SAAA;AACA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAC,MAAA;MACAG,OAAA;IACA;IACAC,cAAA;MACAL,IAAA,EAAAM,OAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,cAAA;MACA,wBAAAP,QAAA;IACA;IACA;IACAQ,cAAA;MACA,YAAAZ,IAAA;IACA;EACA;EACAa,QAAA;IACA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA;IACAD,cAAA;MACA,MAAAE,WAAA,QAAAC,KAAA,CAAAjB,IAAA;MACA,IAAAgB,WAAA;QACAnB,IAAA,CAAAqB,cAAA,CAAAF,WAAA;MACA;IACA;IACA;IACAG,SAAA;MACA,MAAAC,SAAA,OAAAtB,SAAA;QACAuB,IAAA,EAAAA,CAAA,UAAArB;MACA;MACAoB,SAAA,CAAAE,EAAA;QACA,KAAAb,QAAA;QACAc,UAAA;UACA,KAAAd,QAAA;QACA;QACAW,SAAA,CAAAI,OAAA;MACA;MACAJ,SAAA,CAAAE,EAAA;QACAG,OAAA,CAAAC,GAAA;QACAN,SAAA,CAAAI,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}